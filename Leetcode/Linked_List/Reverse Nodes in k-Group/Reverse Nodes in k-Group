# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        def isreversible(ptr,k):
            while ptr and k > 0:
                ptr = ptr.next
                k -= 1
            return k == 0
        
        dummy = ListNode()
        p = dummy
        ptr = head
        while ptr:
            if isreversible(ptr,k):
                tail = ptr
                prev_h = None
                next_h = None
                for _ in range(k):
                    next_h = ptr.next
                    ptr.next = prev_h
                    prev_h = ptr
                    ptr = next_h
                p.next = prev_h
                while p.next:
                    p = p.next
                p.next = next_h
            else:
                p.next = ptr
                break
        return dummy.next


    
